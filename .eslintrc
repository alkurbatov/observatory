{
  "env": {
    "browser": false,
    "commonjs": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "settings": {
    "import/resolver": {
      "jest": {
        "jestConfigFile": "./jest.config.js"
      }
    }
  },
  "extends": ["airbnb-base", "plugin:prettier/recommended"],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parserOptions": {
    "ecmaVersion": 2018
  },
  "plugins": ["prettier", "jest"],
  "rules": {
    "camelcase": "off",
    "class-methods-use-this": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline"
      }
    ],
    "curly": [2, "multi"],
    "func-names": "off",
    "indent": ["error", 2],
    "jest/no-disabled-tests": "warn",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/prefer-to-have-length": "warn",
    "jest/valid-expect": "error",
    "linebreak-style": ["error", "unix"],
    "max-len": [
      "error",
      80,
      2,
      {
        "ignoreUrls": true
      }
    ],
    "max-classes-per-file": "off",
    "no-cond-assign": "off",
    "no-console": "off",
    "no-continue": "off",
    "nonblock-statement-body-position": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize.",
      }
    ],
    "prettier/prettier": "error",
    "quotes": ["error", "single"],
    "semi": ["error", "never"],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "object-curly-newline": "off"
  }
}
